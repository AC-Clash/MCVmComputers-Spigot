# This is the configuration file for DOSBox 0.74.31. (Please use the latest version of DOSBox)
# Lines starting with a # are comment lines and are ignored by DOSBox.
# They are used to (briefly) document the effect of each option.

[sdl]
#       fullscreen: Start dosbox directly in fullscreen. (Press ALT-Enter to go back)
#       fulldouble: Use double buffering in fullscreen. It can reduce screen flickering, but it can also result in a slow DOSBox.
#   fullresolution: What resolution to use for fullscreen: original or fixed size (e.g. 1024x768).
#                     Using your monitor's native resolution with aspect=true might give the best results.
#                     If you end up with small window on a large screen, try an output different from surface.
# windowresolution: Scale the window to this size IF the output device supports hardware scaling.
#                     (output=surface does not!)
#           output: What video system to use for output.
#                   Possible values surface, overlay, opengl, openglnb, ddraw.
#         autolock: Mouse will automatically lock, if you click on the screen. (Press CTRL-F10 to unlock)
#      sensitivity: Mouse sensitivity.
#      waitonerror: Wait before closing the console if dosbox has an error.
#         priority: Priority levels for dosbox. Second entry behind the comma is for when dosbox is not focused/minimized.
#                     pause is only valid for the second entry.
#                   Possible values lowest, lower, normal, higher, highest, pause.
#       mapperfile: File used to load/save the key/event mappings from. Resetmapper only works with the defaul value.
#     usescancodes: Avoid usage of symkeys, might not work on all operating systems.

fullscreen=false
fulldouble=false
fullresolution=original
windowresolution=original
output=surface
autolock=true
sensitivity=100
waitonerror=true
priority=higher,normal
mapperfile=mapper.txt
usescancodes=true

[dosbox]
#      language: Select another language file.
#       machine: The type of machine tries to emulate.
#                Possible values hercules, cga, tandy, pcjr, ega, vgaonly, svga_s3, svga_et3000, svga_et4000, svga_paradise, vesa_nolfb, vesa_oldvbe, vgastd.
#      vmemsize: Amount of video memory in megabytes.
#                  The maximum resolution and color depth the svga_s3 will be able to display
#                  is determined by this value.
#                   0: 512k (800x600  at 256 colors)
#                  1: 1024x768  at 256 colors or 800x600  at 64k colors
#                  2: 1600x1200 at 256 colors or 1024x768 at 64k colors or 640x480 at 16M colors
#                  4: 1600x1200 at 64k colors or 1024x768 at 16M colors
#                  8: up to 1600x1200 at 16M colors
#                For build engine games, use more memory than in the list above so it can
#                use triple buffering and thus won't flicker.
#                
# vmemcachesize: The amount of video cache to use in kb.  Only certain video modes will
#                uses this.  0 will use the Dosbox standard value 2x video memory size.
#      captures: Directory where things like wave, midi, screenshot get captured.
#       memsize: Amount of memory DOSBox has in megabytes.
#                  This value is best left at its default to avoid problems with some games,
#                  though few games might require a higher value.
#                  There is generally no speed advantage when raising this value.

language=
machine=svga_s3
vmemsize=2
vmemcachesize=0
captures=capture
memsize=16

[render]
# frameskip: How many frames DOSBox skips before drawing one. Use -1 for auto
#    aspect: Do aspect correction, if your output method doesn't support scaling this can slow things down!.
#    scaler: Scaler used to enlarge/enhance low resolution modes.
#              If 'forced' is appended, then the scaler will be used even if the result might not be desired.
#            Possible values none, normal2x, normal3x.

frameskip=-1
aspect=false
scaler=normal2x

[cpu]
#      core: CPU Core used in emulation. auto will switch to dynamic if available and appropriate.
#            Possible values auto, dynamic, normal, simple.
#   cputype: CPU Type used in emulation. auto emulates a 486 which tolerates Pentium instructions.
#            Possible values auto, 386, 486, pentium, 386_prefetch, 486_prefetch, p6.
#    cycles: Amount of instructions DOSBox tries to emulate each millisecond.
#            Setting this value too high results in sound dropouts and lags.
#            Cycles can be set in 3 ways:
#              'auto'          tries to guess what a game needs.
#                              It usually works, but can fail for certain games.
#              'fixed #number' will set a fixed amount of cycles. This is what you usually need if 'auto' fails.
#                              (Example: fixed 4000).
#              'max'           will allocate as much cycles as your computer is able to handle.
#            
#            Possible values auto, fixed, max.
#   cycleup: Amount of cycles to decrease/increase with keycombo.(CTRL-F11/CTRL-F12)
# cycledown: Setting it lower than 100 will be a percentage.
#   softfpu: Enable software emulation of the FPU

core=auto
cputype=auto
cycles=auto
cycleup=10
cycledown=20
softfpu=false

[compiler]
#      threshold: How many times a block is seen before it is compiled.  0 turns off the compiler, 1 compiles everything (And will like cause problems with self modifying code).
#                 Only used when dynamic_core is active. Values between 100-1000 yield the best results.
# min_block_size: The minimum number of ops the block must contain in order to be compiled.  In general 2 is a good value.

threshold=1000
min_block_size=2

[pci]
# enabled: PCI needs to be enabled if you want to use a Voodoo card.
#          Enabling PCI will most likely break Bochs Bios support

enabled=false

[3dfx]
#          type: Which 3dfx card you would like to emulate.  Remember to enabled PCI.
#                  'none'
#                  'voodoo1'       Frame Buffer can be 2 or 4MB
#                                  Texture Memory can be 1, 2 or 4MB
#                                  Can have 1 or 2 Texture Management Units
#                                      singletmu is set to false by default
#                  'voodoo2'       Frame Buffer can be 2 or 4MB
#                                  Texture Memory can be 2, 4, 8 or 16MB
#                                  Number of Texture Managment Units (TMUs) is 2
#                                      singletmu is ignored
#                
#                Possible values none, voodoo1, voodoo2.
#   framebuffer: The amount of memory the framebuffer has.
#                  2   The highest resolution is 640x480
#                  4   The highest resolution is 800x600
#                
#                Possible values 2, 4.
# texturememory: The amount of memory each TMU has
#                Possible values 1, 2, 4, 8, 16.
#     singletmu: Voodoo 1 can have 1 or 2 TMUs.  2 is the default

type=voodoo1
framebuffer=4
texturememory=4
singletmu=false

[keyboard]
#       aux: Enable emulation of the 8042 auxiliary port. PS/2 mouse emulation requires this to be enabled
# auxdevice: Type of PS/2 mouse attached to the AUX port
#            Possible values none, 2button, 3button, intellimouse, intellimouse45.

aux=true
auxdevice=intellimouse

[mixer]
#    nosound: Enable silent mode, sound is still emulated though.
#       rate: Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.
#             Possible values 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#  blocksize: Mixer block size, larger blocks might help sound stuttering but sound will also be more lagged.
#             Possible values 1024, 2048, 4096, 8192, 512, 256.
#  prebuffer: How many milliseconds of data to keep on top of the blocksize.
# javabuffer: Buffer parameter passed to Java's SourceDataLine.open call. At 44100Hz, 16-bit stereo a value of 8820 represents 50ms

nosound=false
rate=44100
blocksize=512
prebuffer=20
javabuffer=8820

[midi]
#     mpu401: Type of MPU-401 to emulate.
#             Possible values intelligent, uart, none.
# mididevice: Device that will receive the MIDI data from MPU-401.
#             Possible values default, win32, alsa, oss, coreaudio, coremidi, none.
# midiconfig: Special configuration options for the device driver. This is usually the id of the device you want to use.
#               When using a Roland MT-32 rev. 0 as midi output device, some games may require a delay in order to prevent 'buffer overflow' issues.
#               In that case, add 'delaysysex', for example: midiconfig=2 delaysysex
#               See the README/Manual for more details.

mpu401=intelligent
mididevice=default
midiconfig=

[sblaster]
#  sbtype: Type of Soundblaster to emulate. gb is Gameblaster.
#          Possible values sb1, sb2, sbpro1, sbpro2, sb16, gb, none.
#  sbbase: The IO address of the soundblaster.
#          Possible values 220, 240, 260, 280, 2a0, 2c0, 2e0, 300.
#     irq: The IRQ number of the soundblaster.
#          Possible values 7, 5, 3, 9, 10, 11, 12.
#     dma: The DMA number of the soundblaster.
#          Possible values 1, 5, 0, 3, 6, 7.
#    hdma: The High DMA number of the soundblaster.
#          Possible values 1, 5, 0, 3, 6, 7.
# sbmixer: Allow the soundblaster mixer to modify the DOSBox mixer.
# oplmode: Type of OPL emulation. On 'auto' the mode is determined by sblaster type. All OPL modes are Adlib-compatible, except for 'cms'.
#          Possible values auto, cms, opl2, dualopl2, opl3, none.
#  oplemu: Provider for the OPL emulation. compat might provide better quality (see oplrate as well).
#          Possible values default, compat, fast.
# oplrate: Sample rate of OPL music emulation. Use 49716 for highest quality (set the mixer rate accordingly).
#          Possible values 44100, 49716, 48000, 32000, 22050, 16000, 11025, 8000.

sbtype=sb16
sbbase=220
irq=7
dma=1
hdma=5
sbmixer=true
oplmode=auto
oplemu=default
oplrate=44100

[gus]
#      gus: Enable the Gravis Ultrasound emulation.
#  gusrate: Sample rate of Ultrasound emulation.
#           Possible values 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#  gusbase: The IO base address of the Gravis Ultrasound.
#           Possible values 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.
#   gusirq: The IRQ number of the Gravis Ultrasound.
#           Possible values 5, 3, 7, 9, 10, 11, 12.
#   gusdma: The DMA channel of the Gravis Ultrasound.
#           Possible values 3, 0, 1, 5, 6, 7.
# ultradir: Path to Ultrasound directory. In this directory
#           there should be a MIDI directory that contains
#           the patch files for GUS playback. Patch sets used
#           with Timidity should work fine.

gus=false
gusrate=44100
gusbase=240
gusirq=5
gusdma=3
ultradir=C:\ULTRASND

[speaker]
# pcspeaker: Enable PC-Speaker emulation.
#    pcrate: Sample rate of the PC-Speaker sound generation.
#            Possible values 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#     tandy: Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.
#            Possible values auto, on, off.
# tandyrate: Sample rate of the Tandy 3-Voice generation.
#            Possible values 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.
#    disney: Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).

pcspeaker=true
pcrate=44100
tandy=auto
tandyrate=44100
disney=true

[joystick]
# joysticktype: Type of joystick to emulate: auto (default), none,
#               2axis (supports two joysticks),
#               4axis (supports one joystick, first joystick used),
#               4axis_2 (supports one joystick, second joystick used),
#               fcs (Thrustmaster), ch (CH Flightstick).
#               none disables joystick emulation.
#               auto chooses emulation depending on real joystick(s).
#               (Remember to reset dosbox's mapperfile if you saved it earlier)
#               Possible values auto, 2axis, 4axis, 4axis_2, fcs, ch, none.
#        timed: enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).
#     autofire: continuously fires as long as you keep the button pressed.
#       swap34: swap the 3rd and the 4th axis. can be useful for certain joysticks.
#   buttonwrap: enable button wrapping at the number of emulated buttons.

joysticktype=auto
timed=true
autofire=false
swap34=false
buttonwrap=false

[serial]
# serial1: set type of device connected to com port.
#          Can be disabled, dummy, modem, nullmodem, directserial.
#          Additional parameters must be in the same line in the form of
#          parameter:value. Parameter for all types is irq (optional).
#          for directserial: realport (required), rxdelay (optional).
#                           (realport:COM1 realport:ttyS0).
#          for modem: listenport (optional).
#          for nullmodem: server, rxdelay, txdelay, telnet, usedtr,
#                         transparent, port, inhsocket (all optional).
#          Example: serial1=modem listenport:5000
#          Possible values dummy, disabled, modem, nullmodem, directserial.
# serial2: see serial1
#          Possible values dummy, disabled, modem, nullmodem, directserial.
# serial3: see serial1
#          Possible values dummy, disabled, modem, nullmodem, directserial.
# serial4: see serial1
#          Possible values dummy, disabled, modem, nullmodem, directserial.

serial1=dummy
serial2=dummy
serial3=disabled
serial4=disabled

[dos]
#            xms: Enable XMS support.
#            ems: Enable EMS support. The default (=true) provides the best
#                 compatibility but certain applications may run better with
#                 other choices, or require EMS support to be disabled (=false)
#                 to work at all.
#                 Possible values true, emsboard, emm386, false.
#            umb: Enable UMB support.
# keyboardlayout: Language code of the keyboard layout (or none).

xms=true
ems=true
umb=true
keyboardlayout=auto

[ipx]
# ipx: Enable ipx over UDP/IP emulation.

ipx=false

[ide]
#    primary: Enable IDE interface for use with Bochs bios
#  secondary: Enable IDE interface for use with Bochs bios
#   tertiary: Enable IDE interface for use with Bochs bios
# quaternary: Enable IDE interface for use with Bochs bios

primary=true
secondary=true
tertiary=false
quaternary=false

[floppy]
# enable: Enable Floppy controller for use with Bochs bios

enable=true

[ne2000]
#     mode: none -- Hardware is not enabled.  This is the default.
#           user -- Internal router will be used.  Currently only DHCP works.
#                   UDP/TCP has not been implemented so the internet in
#                   Win98 won't work yet.
#           pcap -- This requires jnetpcap.jar, the appropriate native jnetpcap
#                   libaries and [Win]Pcap installed on the host computer.
#                   This is the best option if you want to browse network
#                   shares and use the internet on Win98
#           pcaphost -- This is not a reliable option yet and used for testing.
#           
#           Possible values false, user, pcap, pcaphost.
# pcapport: Used with mode=pcaphost. Port to connect to when forwarding pcap requests
#  nicbase: The base address of the NE2000 board.
#   nicirq: The interrupt it uses. Note serial2 uses IRQ3 as default.
#  macaddr: The physical address the emulator will use on your network.
#           If you have multiple DOSBoxes running on your network,
#           this has to be changed for each. AC:DE:48 is an address range reserved for
#           private use, so modify the last three number blocks.
#           I.e. AC:DE:48:88:99:AB.
#  realnic: Specifies which of your network interfaces is used.
#           Write 'list' here to see the list of devices in the
#           Status Window. Then make your choice and put either the
#           interface number (2 or something) or a part of your adapters
#           name, e.g. VIA here.  This option is used for mode="pcap"

mode=false
pcapport=15654
nicbase=300
nicirq=3
macaddr=AC:DE:48:88:99:AA
realnic=list

[autoexec]# 
#Lines in this section will be run at startup.
#You can put your MOUNT lines here.


